using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace IVCalcNetFramework
{
    public class IVCalculator
    {
        
        public static void loadData()
        {
            var formList = "25.1:893,25.2:894,25.3:895,25.4:896,25.5:897,25.6:898,25.7:899,26.1:900,37.1:903,38.1:904,50.1:905,51.1:906,52.1:907,52.2:908,53.1:909,77.1:913,78.1:914,83.1:915,110.1:920,122.1:921,222.1:949,263.1:950,264.1:951,421.1:965,422.1:966,423.2:967,479.1:968,479.2:969,479.3:970,479.4:971,479.5:972,550.1:992,555.1:994,555.2:995,555.3:996,562.1:997,618.1:1004,646.1:1008,646.2:1009,647.1:1010,678.1:1097,681.1:1098,710.1:1099,710.2:1100,710.3:1101,711.1:1102,711.2:1103,711.3:1104,746.1:1117,773.1:1118,773.2:1119,773.3:1120,773.4:1121,773.5:1122,773.6:1123,773.7:1124,773.8:1125,773.9:1126,773.10:1127,773.11:1128,773.12:1129,773.13:1130,773.14:1131,773.15:1132,773.16:1133,773.17:1134,778.1:1148,800.1:1149,800.2:1150,845.1:1152,845.2:1153,854.1:1155,855.1:1156,869.1:1157,869.2:1158,869.3:1159,869.4:1160,869.5:1161,869.6:1162,869.7:1163,869.8:1164,875.1:1165,876.1:1166,877.1:1167,888.1:1168,889.1:1169,890.1:1170";
            var fs = formList.Split(',');
            foreach (var f in fs)
            {
                var fsplit = f.Split(':');
                decimal form = decimal.Parse(fsplit[0]);
                int id = int.Parse(fsplit[1]);
                forms[form] = id;
            }

            var JsonMons = "[null,[45, 49, 49, 65, 65, 45, 11, 3, 1, 7,[0, 0, 0, 1, 0, 0]],[60, 62, 63, 80, 80, 60, 11, 3, 1, 7,[0, 0, 0, 1, 1, 0]],[80, 82, 83, 100, 100, 80, 11, 3, 1, 7,[0, 0, 0, 2, 1, 0]],[39, 52, 43, 60, 50, 65, 9, 9, 1, 14,[0, 0, 0, 0, 0, 1]],[58, 64, 58, 80, 65, 80, 9, 9, 1, 14,[0, 0, 0, 1, 0, 1]],[78, 84, 78, 109, 85, 100, 9, 2, 1, 14,[0, 0, 0, 3, 0, 0]],[44, 48, 65, 50, 64, 43, 10, 10, 1, 2,[0, 0, 1, 0, 0, 0]],[59, 63, 80, 65, 80, 58, 10, 10, 1, 2,[0, 0, 1, 0, 1, 0]],[79, 83, 100, 85, 105, 78, 10, 10, 1, 2,[0, 0, 0, 0, 3, 0]],[45, 30, 35, 20, 20, 45, 6, 6, 3, 3,[1, 0, 0, 0, 0, 0]],[50, 20, 55, 25, 25, 30, 6, 6, 3, 3,[0, 0, 2, 0, 0, 0]],[60, 45, 50, 90, 80, 70, 6, 2, 3, 3,[0, 0, 0, 2, 1, 0]], null, null, null, null, null, null, null, null, null, null, null, null,[35, 55, 40, 50, 50, 90, 12, 12, 5, 6,[0, 0, 0, 0, 0, 2]],[60, 90, 55, 90, 80, 110, 12, 12, 5, 6,[0, 0, 0, 0, 0, 3]], null, null, null, null, null, null, null, null,[70, 45, 48, 60, 65, 35, 17, 17, 6, 6,[2, 0, 0, 0, 0, 0]],[95, 70, 73, 95, 90, 60, 17, 17, 6, 6,[3, 0, 0, 0, 0, 0]],[38, 41, 40, 50, 65, 65, 9, 9, 5, 5,[0, 0, 0, 0, 0, 1]],[73, 76, 75, 81, 100, 100, 9, 9, 5, 5,[0, 0, 0, 0, 1, 1]], null, null, null, null,[45, 50, 55, 75, 65, 30, 11, 3, 7, 7,[0, 0, 0, 1, 0, 0]],[60, 65, 70, 85, 75, 40, 11, 3, 7, 7,[0, 0, 0, 2, 0, 0]],[75, 80, 85, 110, 90, 50, 11, 3, 7, 7,[0, 0, 0, 3, 0, 0]], null, null, null, null,[10, 55, 25, 35, 45, 95, 4, 4, 5, 5,[0, 0, 0, 0, 0, 1]],[35, 100, 50, 50, 70, 120, 4, 4, 5, 5,[0, 0, 0, 0, 0, 2]],[40, 45, 35, 40, 40, 90, 0, 0, 5, 5,[0, 0, 0, 0, 0, 1]],[65, 70, 60, 65, 65, 115, 0, 0, 5, 5,[0, 0, 0, 0, 0, 2]], null, null, null, null,[55, 70, 45, 70, 50, 60, 9, 9, 5, 5,[0, 1, 0, 0, 0, 0]],[90, 110, 80, 100, 80, 95, 9, 9, 5, 5,[0, 2, 0, 0, 0, 0]], null, null, null, null, null, null,[70, 80, 50, 35, 35, 35, 1, 1, 8, 8,[0, 1, 0, 0, 0, 0]],[80, 100, 70, 50, 60, 45, 1, 1, 8, 8,[0, 2, 0, 0, 0, 0]],[90, 130, 80, 65, 85, 55, 1, 1, 8, 8,[0, 3, 0, 0, 0, 0]], null, null, null, null, null, null, null, null,[50, 85, 55, 65, 65, 90, 9, 9, 5, 5,[0, 0, 0, 0, 0, 1]],[65, 100, 70, 80, 80, 105, 9, 9, 5, 5,[0, 0, 0, 0, 0, 2]], null, null, null, null,[52, 90, 55, 58, 62, 60, 0, 2, 4, 5,[0, 1, 0, 0, 0, 0]], null, null, null, null, null, null,[30, 65, 100, 45, 25, 40, 10, 10, 9, 9,[0, 0, 1, 0, 0, 0]],[50, 95, 180, 85, 45, 70, 10, 14, 9, 9,[0, 0, 2, 0, 0, 0]],[30, 35, 30, 100, 35, 80, 7, 3, 11, 11,[0, 0, 0, 1, 0, 0]],[45, 50, 45, 115, 55, 95, 7, 3, 11, 11,[0, 0, 0, 2, 0, 0]],[60, 65, 60, 130, 75, 110, 7, 3, 11, 11,[0, 0, 0, 3, 0, 0]],[35, 45, 160, 30, 45, 70, 5, 4, 10, 10,[0, 0, 1, 0, 0, 0]], null, null,[30, 105, 90, 25, 25, 50, 10, 10, 9, 9,[0, 1, 0, 0, 0, 0]],[55, 130, 115, 50, 50, 75, 10, 10, 9, 9,[0, 2, 0, 0, 0, 0]], null, null, null, null, null, null,[50, 120, 53, 35, 110, 87, 1, 1, 8, 8,[0, 2, 0, 0, 0, 0]],[50, 105, 79, 35, 110, 76, 1, 1, 8, 8,[0, 0, 0, 0, 2, 0]], null,[40, 65, 95, 60, 45, 35, 3, 3, 11, 11,[0, 0, 1, 0, 0, 0]],[65, 90, 120, 85, 70, 60, 3, 3, 11, 11,[0, 0, 2, 0, 0, 0]],[80, 85, 95, 30, 30, 25, 4, 5, 1, 5,[0, 0, 1, 0, 0, 0]],[105, 130, 120, 45, 45, 40, 4, 5, 1, 5,[0, 2, 0, 0, 0, 0]], null, null, null, null, null,[45, 67, 60, 35, 50, 63, 10, 10, 12, 12,[0, 1, 0, 0, 0, 0]],[80, 92, 65, 65, 80, 68, 10, 10, 12, 12,[0, 2, 0, 0, 0, 0]], null, null,[40, 45, 65, 100, 120, 90, 13, 17, 8, 8,[0, 0, 0, 0, 2, 0]], null, null, null, null, null, null,[20, 10, 55, 15, 20, 80, 10, 10, 12, 14,[0, 0, 0, 0, 0, 1]],[95, 125, 79, 60, 100, 81, 10, 2, 12, 14,[0, 2, 0, 0, 0, 0]],[130, 85, 80, 85, 95, 60, 10, 14, 1, 2,[2, 0, 0, 0, 0, 0]],[48, 48, 48, 48, 48, 48, 0, 0, 13, 13,[1, 0, 0, 0, 0, 0]],[55, 55, 50, 45, 65, 55, 0, 0, 5, 5,[0, 0, 0, 0, 1, 0]],[130, 65, 60, 110, 95, 65, 10, 10, 5, 5,[2, 0, 0, 0, 0, 0]],[65, 65, 60, 110, 95, 130, 12, 12, 5, 5,[0, 0, 0, 0, 0, 2]],[65, 130, 60, 95, 110, 65, 9, 9, 5, 5,[0, 2, 0, 0, 0, 0]], null, null, null, null, null, null,[160, 110, 65, 65, 110, 30, 0, 0, 1, 1,[2, 0, 0, 0, 0, 0]], null, null, null, null, null, null,[106, 110, 90, 154, 90, 130, 13, 13, 15, 15,[0, 0, 0, 3, 0, 0]],[100, 100, 100, 100, 100, 100, 13, 13, 15, 15,[3, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null, null, null, null, null,[60, 30, 30, 36, 56, 50, 0, 2, 4, 4,[1, 0, 0, 0, 0, 0]],[100, 50, 50, 86, 96, 70, 0, 2, 4, 4,[2, 0, 0, 0, 0, 0]], null, null, null, null, null,[75, 38, 38, 56, 56, 67, 10, 12, 12, 12,[1, 0, 0, 0, 0, 0]],[125, 58, 58, 76, 76, 67, 10, 12, 12, 12,[2, 0, 0, 0, 0, 0]],[20, 40, 15, 35, 35, 60, 12, 12, 15, 15,[0, 0, 0, 0, 0, 1]],[50, 25, 28, 45, 55, 15, 17, 17, 15, 15,[0, 0, 0, 0, 1, 0]], null,[35, 20, 65, 40, 65, 20, 17, 17, 15, 15,[0, 0, 0, 0, 1, 0]],[55, 40, 85, 80, 105, 40, 17, 2, 4, 6,[0, 0, 0, 0, 2, 0]],[40, 50, 45, 70, 45, 70, 13, 2, 4, 4,[0, 0, 0, 1, 0, 0]],[65, 75, 70, 95, 70, 95, 13, 2, 4, 4,[0, 0, 0, 1, 0, 1]], null, null, null,[75, 80, 95, 90, 100, 50, 11, 11, 7, 7,[0, 0, 0, 0, 3, 0]], null, null,[70, 100, 115, 30, 65, 30, 5, 5, 10, 10,[0, 0, 2, 0, 0, 0]], null, null, null, null, null, null, null, null,[55, 45, 45, 25, 25, 15, 10, 4, 2, 5,[1, 0, 0, 0, 0, 0]],[95, 85, 85, 65, 65, 35, 10, 4, 2, 5,[2, 0, 0, 0, 0, 0]],[65, 65, 60, 130, 95, 110, 13, 13, 5, 5,[0, 0, 0, 2, 0, 0]],[95, 65, 110, 60, 130, 65, 16, 16, 5, 5,[0, 0, 0, 0, 2, 0]], null, null, null, null,[190, 33, 58, 33, 58, 33, 13, 13, 11, 11,[2, 0, 0, 0, 0, 0]], null, null, null, null, null,[75, 85, 200, 55, 65, 30, 8, 4, 10, 10,[0, 0, 2, 0, 0, 0]], null, null,[65, 95, 85, 55, 55, 85, 10, 3, 12, 12,[0, 1, 0, 0, 0, 0]], null,[20, 10, 230, 10, 230, 5, 6, 5, 3, 3,[0, 0, 1, 0, 1, 0]], null,[55, 95, 55, 35, 75, 115, 16, 14, 5, 5,[0, 0, 0, 0, 0, 1]], null, null, null, null,[50, 50, 40, 30, 30, 50, 14, 4, 5, 5,[0, 1, 0, 0, 0, 0]],[100, 100, 80, 60, 60, 50, 14, 4, 5, 5,[1, 1, 0, 0, 0, 0]],[65, 55, 95, 65, 95, 35, 10, 5, 2, 9,[0, 0, 1, 0, 1, 0]],[35, 65, 35, 65, 35, 65, 10, 10, 2, 12,[0, 0, 0, 1, 0, 0]],[75, 105, 75, 105, 75, 45, 10, 10, 2, 12,[0, 1, 0, 1, 0, 0]],[45, 55, 45, 65, 45, 75, 14, 2, 2, 5,[0, 0, 0, 0, 0, 1]],[85, 40, 70, 80, 140, 70, 10, 2, 2, 2,[0, 0, 0, 0, 2, 0]], null, null, null, null, null, null, null, null, null,[35, 35, 35, 35, 35, 35, 1, 1, 15, 15,[0, 1, 0, 0, 0, 0]],[50, 95, 95, 35, 110, 70, 1, 1, 8, 8,[0, 0, 0, 0, 2, 0]], null, null, null, null, null, null, null, null,[50, 64, 50, 45, 50, 41, 5, 4, 1, 1,[0, 1, 0, 0, 0, 0]],[70, 84, 70, 65, 70, 51, 5, 4, 1, 1,[0, 2, 0, 0, 0, 0]],[100, 134, 110, 95, 100, 61, 5, 16, 1, 1,[0, 3, 0, 0, 0, 0]], null, null,[100, 100, 100, 100, 100, 100, 13, 11, 15, 15,[3, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null, null, null, null, null,[38, 30, 41, 30, 41, 60, 0, 0, 5, 5,[0, 0, 0, 0, 0, 1]],[78, 70, 61, 50, 61, 100, 0, 0, 5, 5,[0, 0, 0, 0, 0, 2]], null, null, null, null, null,[40, 30, 30, 40, 50, 30, 10, 11, 2, 7,[0, 0, 0, 0, 1, 0]],[60, 50, 50, 60, 70, 50, 10, 11, 2, 7,[0, 0, 0, 0, 2, 0]],[80, 70, 70, 90, 100, 70, 10, 11, 2, 7,[0, 0, 0, 0, 3, 0]],[40, 40, 50, 30, 30, 30, 11, 11, 5, 7,[0, 0, 1, 0, 0, 0]],[70, 70, 40, 60, 40, 60, 11, 16, 5, 7,[0, 2, 0, 0, 0, 0]],[90, 100, 60, 90, 60, 80, 11, 16, 5, 7,[0, 3, 0, 0, 0, 0]], null, null,[40, 30, 30, 55, 30, 85, 10, 2, 2, 4,[0, 0, 0, 0, 0, 1]],[60, 50, 100, 95, 70, 65, 10, 2, 2, 4,[0, 0, 2, 0, 0, 0]],[28, 25, 25, 45, 35, 40, 13, 17, 8, 11,[0, 0, 0, 1, 0, 0]],[38, 35, 35, 65, 55, 50, 13, 17, 8, 11,[0, 0, 0, 2, 0, 0]],[68, 65, 65, 125, 115, 80, 13, 17, 8, 11,[0, 0, 0, 3, 0, 0]], null, null, null, null, null, null, null,[31, 45, 90, 30, 30, 40, 6, 4, 3, 3,[0, 0, 1, 0, 0, 0]],[61, 90, 45, 50, 50, 160, 6, 2, 3, 3,[0, 0, 0, 0, 0, 2]],[1, 90, 45, 30, 30, 40, 6, 7, 10, 10,[2, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null, null, null,[50, 75, 75, 65, 65, 50, 16, 7, 8, 8,[0, 1, 1, 0, 0, 0]],[50, 85, 85, 55, 55, 50, 8, 17, 5, 6,[0, 1, 1, 0, 0, 0]], null, null, null, null, null,[40, 45, 40, 65, 40, 65, 12, 12, 5, 5,[0, 0, 0, 0, 0, 1]],[70, 75, 60, 105, 60, 105, 12, 12, 5, 5,[0, 0, 0, 0, 0, 2]], null, null, null, null,[50, 60, 45, 100, 80, 65, 11, 3, 6, 7,[0, 0, 0, 2, 0, 0]], null, null, null, null,[130, 70, 35, 70, 35, 60, 10, 10, 5, 12,[1, 0, 0, 0, 0, 0]],[170, 90, 45, 90, 45, 60, 10, 10, 5, 12,[2, 0, 0, 0, 0, 0]], null, null,[70, 85, 140, 85, 70, 20, 9, 9, 5, 5,[0, 0, 2, 0, 0, 0]], null, null, null,[45, 100, 45, 45, 45, 10, 4, 4, 3, 14,[0, 1, 0, 0, 0, 0]],[50, 70, 50, 50, 50, 70, 4, 15, 3, 14,[0, 1, 0, 0, 0, 1]],[80, 100, 80, 80, 80, 100, 4, 15, 3, 14,[0, 1, 0, 0, 0, 2]], null, null, null, null, null, null,[90, 55, 65, 95, 85, 70, 5, 13, 10, 10,[0, 0, 0, 2, 0, 0]],[90, 95, 85, 55, 65, 70, 5, 13, 10, 10,[0, 2, 0, 0, 0, 0]],[50, 48, 43, 46, 41, 60, 10, 4, 12, 12,[1, 0, 0, 0, 0, 0]],[110, 78, 73, 76, 71, 60, 10, 4, 12, 12,[2, 0, 0, 0, 0, 0]],[43, 80, 65, 50, 35, 35, 10, 10, 2, 9,[0, 1, 0, 0, 0, 0]],[63, 120, 85, 90, 55, 55, 10, 16, 2, 9,[0, 2, 0, 0, 0, 0]],[40, 40, 55, 40, 70, 55, 4, 13, 10, 10,[0, 0, 0, 0, 1, 0]],[60, 70, 105, 70, 120, 75, 4, 13, 10, 10,[0, 0, 0, 0, 2, 0]], null, null, null, null,[20, 15, 20, 10, 55, 80, 10, 10, 2, 14,[0, 0, 0, 0, 0, 1]],[95, 60, 79, 100, 125, 81, 10, 10, 2, 14,[0, 0, 0, 0, 2, 0]], null, null, null, null,[20, 40, 90, 30, 90, 25, 7, 7, 11, 11,[0, 0, 0, 0, 1, 0]],[40, 70, 130, 60, 130, 25, 7, 7, 11, 11,[0, 0, 1, 0, 1, 0]], null, null, null,[95, 23, 48, 23, 48, 23, 13, 13, 15, 15,[1, 0, 0, 0, 0, 0]],[50, 50, 50, 50, 50, 50, 14, 14, 6, 10,[1, 0, 0, 0, 0, 0]],[80, 80, 80, 80, 80, 80, 14, 14, 6, 10,[2, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,[100, 100, 100, 100, 100, 100, 8, 13, 15, 15,[3, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,[40, 30, 35, 50, 70, 55, 11, 3, 15, 15,[0, 0, 0, 1, 0, 0]],[60, 70, 65, 125, 105, 90, 11, 3, 6, 7,[0, 0, 0, 3, 0, 0]], null, null, null, null, null, null, null,[30, 30, 42, 30, 42, 70, 6, 2, 3, 3,[0, 0, 0, 0, 0, 1]],[70, 80, 102, 80, 102, 40, 6, 2, 3, 3,[0, 0, 1, 0, 1, 0]], null, null, null,[45, 35, 45, 62, 53, 35, 11, 11, 6, 7,[0, 0, 0, 1, 0, 0]],[70, 60, 70, 87, 78, 85, 11, 11, 6, 7,[0, 0, 0, 2, 0, 0]],[76, 48, 48, 57, 62, 34, 10, 10, 2, 11,[1, 0, 0, 0, 0, 0]],[111, 83, 68, 92, 82, 39, 10, 4, 2, 11,[2, 0, 0, 0, 0, 0]], null,[90, 50, 34, 60, 44, 70, 7, 2, 11, 11,[1, 0, 0, 0, 0, 0]],[150, 80, 44, 90, 54, 80, 7, 2, 11, 11,[2, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null,[63, 63, 47, 41, 41, 74, 3, 16, 5, 5,[0, 0, 0, 0, 0, 1]],[103, 93, 67, 71, 61, 84, 3, 16, 5, 5,[2, 0, 0, 0, 0, 0]],[57, 24, 86, 24, 86, 23, 8, 13, 10, 10,[0, 0, 1, 0, 0, 0]],[67, 89, 116, 79, 116, 33, 8, 13, 10, 10,[0, 0, 1, 0, 1, 0]],[50, 80, 95, 10, 45, 10, 5, 5, 15, 15,[0, 0, 1, 0, 0, 0]],[20, 25, 45, 70, 90, 60, 13, 17, 15, 15,[0, 0, 0, 0, 1, 0]], null, null, null, null, null, null,[135, 85, 40, 40, 85, 5, 0, 0, 15, 15,[1, 0, 0, 0, 0, 0]],[40, 70, 40, 35, 40, 60, 1, 1, 15, 15,[0, 1, 0, 0, 0, 0]],[70, 110, 70, 115, 70, 90, 1, 8, 5, 8,[0, 1, 0, 1, 0, 0]],[68, 72, 78, 38, 42, 32, 4, 4, 5, 5,[0, 0, 1, 0, 0, 0]],[108, 112, 118, 68, 72, 47, 4, 4, 5, 5,[0, 0, 2, 0, 0, 0]],[40, 50, 90, 30, 55, 65, 3, 6, 3, 9,[0, 0, 1, 0, 0, 0]],[70, 90, 110, 60, 75, 95, 3, 16, 3, 9,[0, 0, 2, 0, 0, 0]],[48, 61, 40, 61, 40, 50, 3, 1, 8, 8,[0, 1, 0, 0, 0, 0]],[83, 106, 65, 86, 65, 85, 3, 1, 8, 8,[0, 2, 0, 0, 0, 0]], null, null, null,[45, 20, 50, 60, 120, 50, 10, 2, 15, 15,[0, 0, 0, 0, 1, 0]],[60, 62, 50, 62, 60, 40, 11, 14, 1, 7,[0, 1, 0, 0, 0, 0]],[90, 92, 75, 92, 85, 60, 11, 14, 1, 7,[0, 1, 0, 1, 0, 0]],[70, 120, 65, 45, 85, 125, 16, 14, 5, 5,[0, 1, 0, 0, 0, 1]], null, null,[115, 140, 130, 55, 55, 40, 4, 5, 1, 5,[0, 3, 0, 0, 0, 0]], null, null, null,[85, 50, 95, 120, 115, 80, 17, 2, 4, 6,[0, 0, 0, 2, 1, 0]], null,[65, 110, 130, 60, 65, 95, 11, 11, 5, 5,[0, 0, 2, 0, 0, 0]],[65, 60, 110, 130, 95, 65, 14, 14, 5, 5,[0, 0, 0, 2, 0, 0]], null,[110, 130, 80, 70, 60, 80, 14, 4, 5, 5,[0, 3, 0, 0, 0, 0]], null,[68, 125, 65, 65, 115, 80, 13, 1, 8, 11,[0, 3, 0, 0, 0, 0]], null,[45, 100, 135, 65, 135, 45, 7, 7, 11, 11,[0, 0, 1, 0, 2, 0]],[70, 80, 70, 80, 70, 110, 14, 7, 6, 10,[0, 0, 0, 0, 0, 2]],[50, 50, 77, 95, 77, 91, 12, 7, 11, 11,[0, 0, 0, 1, 0, 1]], null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null,[41, 50, 37, 50, 37, 66, 16, 16, 5, 5,[0, 0, 0, 0, 0, 1]],[64, 88, 50, 88, 50, 106, 16, 16, 5, 5,[0, 0, 0, 0, 0, 2]], null, null, null, null, null, null,[76, 25, 45, 67, 55, 24, 13, 13, 5, 5,[1, 0, 0, 0, 0, 0]],[116, 55, 85, 107, 95, 29, 13, 13, 5, 5,[2, 0, 0, 0, 0, 0]],[50, 55, 50, 36, 30, 43, 0, 2, 4, 4,[0, 1, 0, 0, 0, 0]],[62, 77, 62, 50, 42, 65, 0, 2, 4, 4,[0, 2, 0, 0, 0, 0]],[80, 115, 80, 65, 55, 93, 0, 2, 4, 4,[0, 3, 0, 0, 0, 0]], null, null,[55, 75, 85, 25, 25, 15, 5, 5, 10, 10,[0, 0, 1, 0, 0, 0]],[70, 105, 105, 50, 40, 20, 5, 5, 10, 10,[0, 1, 1, 0, 0, 0]],[85, 135, 130, 60, 80, 25, 5, 5, 10, 10,[0, 3, 0, 0, 0, 0]],[65, 45, 43, 55, 43, 72, 13, 2, 5, 4,[0, 0, 0, 0, 0, 1]],[67, 57, 55, 77, 55, 114, 13, 2, 5, 4,[0, 0, 0, 0, 0, 2]],[60, 85, 40, 30, 45, 68, 4, 4, 5, 5,[0, 1, 0, 0, 0, 0]],[110, 135, 60, 50, 65, 88, 4, 8, 5, 5,[0, 2, 0, 0, 0, 0]], null,[75, 80, 55, 25, 35, 35, 1, 1, 8, 8,[0, 1, 0, 0, 0, 0]],[85, 105, 85, 40, 50, 40, 1, 1, 8, 8,[0, 2, 0, 0, 0, 0]],[105, 140, 95, 55, 65, 45, 1, 1, 8, 8,[0, 3, 0, 0, 0, 0]],[50, 50, 40, 50, 40, 64, 10, 10, 2, 2,[0, 0, 0, 0, 0, 1]],[75, 65, 55, 65, 55, 69, 10, 4, 2, 2,[2, 0, 0, 0, 0, 0]],[105, 95, 75, 85, 75, 74, 10, 4, 2, 2,[3, 0, 0, 0, 0, 0]],[120, 100, 85, 30, 85, 45, 1, 1, 8, 8,[2, 0, 0, 0, 0, 0]],[75, 125, 75, 30, 75, 85, 1, 1, 8, 8,[0, 2, 0, 0, 0, 0]], null, null, null, null, null, null,[40, 27, 60, 37, 50, 66, 11, 17, 7, 6,[0, 0, 0, 0, 0, 1]],[60, 67, 85, 77, 75, 116, 11, 17, 7, 6,[0, 0, 0, 0, 0, 2]], null, null,[70, 92, 65, 80, 55, 98, 10, 10, 12, 12,[0, 0, 0, 0, 0, 2]], null, null, null,[70, 90, 45, 15, 45, 50, 9, 9, 5, 5,[0, 1, 0, 0, 0, 0]],[105, 140, 55, 30, 55, 95, 9, 9, 5, 5,[0, 2, 0, 0, 0, 0]],[75, 86, 67, 106, 67, 60, 11, 11, 7, 7,[0, 0, 0, 2, 0, 0]],[50, 65, 85, 35, 35, 55, 6, 5, 3, 10,[0, 0, 1, 0, 0, 0]],[70, 105, 125, 65, 75, 45, 6, 5, 3, 10,[0, 0, 2, 0, 0, 0]],[50, 75, 70, 35, 70, 48, 16, 1, 5, 14,[0, 1, 0, 0, 0, 0]],[65, 90, 115, 45, 115, 58, 16, 1, 5, 14,[0, 0, 1, 0, 1, 0]],[72, 58, 80, 103, 80, 97, 13, 2, 4, 4,[0, 0, 0, 2, 0, 0]],[38, 30, 85, 55, 65, 30, 7, 7, 10, 11,[0, 0, 1, 0, 0, 0]],[58, 50, 145, 95, 105, 30, 7, 7, 10, 11,[0, 0, 2, 0, 0, 0]], null, null, null, null,[50, 50, 62, 40, 62, 65, 3, 3, 10, 10,[0, 0, 0, 0, 0, 1]],[80, 95, 82, 60, 82, 75, 3, 3, 10, 10,[0, 2, 0, 0, 0, 0]], null, null,[55, 50, 40, 40, 40, 75, 0, 0, 5, 5,[0, 0, 0, 0, 0, 1]],[75, 95, 60, 65, 60, 115, 0, 0, 5, 5,[0, 0, 0, 0, 0, 2]],[45, 30, 50, 55, 65, 45, 13, 13, 8, 8,[0, 0, 0, 0, 1, 0]],[60, 45, 70, 75, 85, 55, 13, 13, 8, 8,[0, 0, 0, 0, 2, 0]],[70, 55, 95, 95, 110, 65, 13, 13, 8, 8,[0, 0, 0, 0, 3, 0]],[45, 30, 40, 105, 50, 20, 13, 13, 11, 11,[0, 0, 0, 1, 0, 0]],[65, 40, 50, 125, 60, 30, 13, 13, 11, 11,[0, 0, 0, 2, 0, 0]],[110, 65, 75, 125, 85, 30, 13, 13, 11, 11,[0, 0, 0, 3, 0, 0]], null, null,[36, 50, 50, 65, 60, 44, 14, 14, 10, 10,[0, 0, 0, 1, 0, 0]],[51, 65, 65, 80, 75, 59, 14, 14, 10, 10,[0, 0, 0, 2, 0, 0]],[71, 95, 85, 110, 95, 79, 14, 14, 10, 10,[0, 0, 0, 3, 0, 0]], null, null, null,[50, 75, 45, 40, 45, 60, 6, 6, 3, 3,[0, 1, 0, 0, 0, 0]],[70, 135, 105, 60, 105, 20, 6, 8, 3, 3,[0, 2, 0, 0, 0, 0]], null, null,[55, 40, 50, 65, 85, 40, 10, 7, 11, 11,[0, 0, 0, 0, 1, 0]],[100, 60, 70, 85, 105, 60, 10, 7, 11, 11,[0, 0, 0, 0, 2, 0]], null,[50, 47, 50, 57, 50, 65, 6, 12, 3, 3,[0, 0, 0, 0, 0, 1]],[70, 77, 60, 97, 60, 108, 6, 12, 3, 3,[0, 0, 0, 0, 0, 2]],[44, 50, 91, 24, 86, 10, 11, 8, 7, 10,[0, 0, 1, 0, 0, 0]],[74, 94, 131, 54, 116, 20, 11, 8, 7, 10,[0, 0, 2, 0, 0, 0]],[40, 55, 70, 45, 60, 30, 8, 8, 10, 10,[0, 0, 1, 0, 0, 0]],[60, 80, 95, 70, 85, 50, 8, 8, 10, 10,[0, 0, 2, 0, 0, 0]],[60, 100, 115, 70, 85, 90, 8, 8, 10, 10,[0, 0, 3, 0, 0, 0]], null, null, null,[55, 55, 55, 85, 55, 30, 13, 13, 8, 8,[0, 0, 0, 1, 0, 0]],[75, 75, 75, 125, 95, 40, 13, 13, 8, 8,[0, 0, 0, 2, 0, 0]],[50, 30, 55, 65, 55, 20, 7, 9, 11, 11,[0, 0, 0, 1, 0, 0]],[60, 40, 60, 95, 60, 55, 7, 9, 11, 11,[0, 0, 0, 2, 0, 0]],[60, 55, 90, 145, 90, 80, 7, 9, 11, 11,[0, 0, 0, 3, 0, 0]],[46, 87, 60, 30, 40, 57, 15, 15, 1, 14,[0, 1, 0, 0, 0, 0]],[66, 117, 70, 40, 50, 67, 15, 15, 1, 14,[0, 2, 0, 0, 0, 0]],[76, 147, 90, 60, 70, 97, 15, 15, 1, 14,[0, 3, 0, 0, 0, 0]],[55, 70, 40, 60, 40, 40, 14, 14, 5, 5,[0, 1, 0, 0, 0, 0]],[95, 130, 80, 70, 80, 50, 14, 14, 5, 5,[0, 2, 0, 0, 0, 0]], null,[50, 40, 85, 40, 65, 25, 6, 6, 3, 3,[0, 0, 1, 0, 0, 0]],[80, 70, 40, 100, 60, 145, 6, 6, 3, 3,[0, 0, 0, 0, 0, 2]],[109, 66, 84, 81, 99, 32, 4, 12, 2, 11,[2, 0, 0, 0, 0, 0]], null, null, null,[59, 74, 50, 35, 50, 35, 4, 7, 10, 10,[0, 1, 0, 0, 0, 0]],[89, 124, 80, 55, 80, 55, 4, 7, 10, 10,[0, 2, 0, 0, 0, 0]],[45, 85, 70, 40, 40, 60, 16, 8, 8, 8,[0, 1, 0, 0, 0, 0]],[65, 125, 100, 60, 70, 70, 16, 8, 8, 8,[0, 2, 0, 0, 0, 0]], null,[70, 83, 50, 37, 50, 60, 0, 2, 4, 4,[0, 1, 0, 0, 0, 0]],[100, 123, 75, 57, 75, 80, 0, 2, 4, 4,[0, 2, 0, 0, 0, 0]],[70, 55, 75, 45, 65, 60, 16, 2, 4, 4,[0, 0, 1, 0, 0, 0]],[110, 65, 105, 55, 95, 80, 16, 2, 4, 4,[0, 0, 0, 2, 0, 0]],[85, 97, 66, 105, 66, 65, 9, 9, 5, 5,[0, 0, 0, 2, 0, 0]],[58, 109, 112, 48, 48, 109, 6, 8, 3, 3,[0, 0, 2, 0, 0, 0]],[52, 65, 50, 45, 50, 38, 16, 15, 14, 14,[0, 1, 0, 0, 0, 0]],[72, 85, 70, 65, 70, 58, 16, 15, 14, 14,[0, 2, 0, 0, 0, 0]],[92, 105, 90, 125, 90, 98, 16, 15, 14, 14,[0, 0, 0, 3, 0, 0]], null, null,[91, 90, 129, 90, 72, 108, 8, 1, 15, 15,[0, 0, 3, 0, 0, 0]],[91, 129, 90, 72, 90, 108, 5, 1, 15, 15,[0, 3, 0, 0, 0, 0]],[91, 90, 72, 90, 129, 108, 11, 1, 15, 15,[0, 0, 0, 0, 3, 0]], null, null,[100, 120, 100, 150, 120, 90, 15, 9, 15, 15,[0, 0, 0, 3, 0, 0]],[100, 150, 120, 120, 100, 90, 15, 12, 15, 15,[0, 3, 0, 0, 0, 0]], null,[125, 130, 90, 130, 90, 95, 15, 14, 15, 15,[1, 1, 0, 1, 0, 0]],[91, 72, 90, 129, 90, 108, 10, 1, 15, 15,[0, 0, 0, 3, 0, 0]], null, null, null, null, null, null, null, null, null, null, null,[38, 36, 38, 32, 36, 57, 0, 0, 5, 5,[0, 0, 0, 0, 0, 1]],[85, 56, 77, 50, 77, 78, 0, 4, 5, 5,[2, 0, 0, 0, 0, 0]], null, null, null, null, null, null, null, null, null, null, null, null, null,[67, 82, 62, 46, 48, 43, 1, 1, 5, 8,[0, 1, 0, 0, 0, 0]],[95, 124, 78, 69, 71, 58, 1, 16, 5, 8,[0, 2, 0, 0, 0, 0]], null,[62, 48, 54, 63, 60, 68, 13, 13, 5, 5,[0, 0, 0, 0, 0, 1]],[74, 48, 76, 83, 81, 104, 13, 13, 5, 5,[0, 0, 0, 0, 0, 2]],[45, 80, 100, 35, 37, 28, 8, 7, 10, 10,[0, 0, 1, 0, 0, 0]],[59, 110, 150, 45, 49, 35, 8, 7, 10, 10,[0, 0, 2, 0, 0, 0]],[60, 50, 140, 50, 140, 60, 8, 7, 10, 10,[0, 0, 2, 0, 1, 0]],[78, 52, 60, 63, 65, 23, 17, 17, 6, 6,[1, 0, 0, 0, 0, 0]],[101, 72, 72, 99, 89, 29, 17, 17, 6, 6,[2, 0, 0, 0, 0, 0]],[62, 48, 66, 59, 57, 49, 17, 17, 6, 6,[0, 0, 1, 0, 0, 0]],[82, 80, 86, 85, 75, 72, 17, 17, 6, 6,[0, 0, 2, 0, 0, 0]],[53, 54, 53, 37, 46, 45, 16, 13, 2, 12,[0, 1, 0, 0, 0, 0]],[86, 92, 88, 68, 75, 73, 16, 13, 2, 12,[0, 2, 0, 0, 0, 0]],[42, 52, 67, 39, 56, 50, 5, 10, 9, 9,[0, 1, 0, 0, 0, 0]],[72, 105, 115, 54, 86, 68, 5, 10, 9, 9,[0, 2, 0, 0, 0, 0]], null, null, null, null,[44, 38, 33, 61, 43, 70, 12, 0, 1, 14,[0, 0, 0, 0, 0, 1]],[62, 55, 52, 109, 94, 109, 12, 0, 1, 14,[0, 0, 0, 1, 0, 1]], null, null, null, null,[95, 65, 65, 110, 130, 60, 17, 17, 5, 5,[0, 0, 0, 0, 2, 0]],[78, 92, 75, 74, 63, 118, 1, 2, 4, 8,[0, 2, 0, 0, 0, 0]], null, null,[45, 50, 35, 55, 75, 40, 15, 15, 14, 14,[0, 0, 0, 0, 1, 0]],[68, 75, 53, 83, 113, 60, 15, 15, 14, 14,[0, 0, 0, 0, 2, 0]],[90, 100, 70, 110, 150, 80, 15, 15, 14, 14,[0, 0, 0, 0, 3, 0]], null,[43, 70, 48, 50, 60, 38, 7, 11, 7, 11,[0, 1, 0, 0, 0, 0]],[85, 110, 76, 65, 82, 56, 7, 11, 7, 11,[0, 2, 0, 0, 0, 0]],[49, 66, 70, 44, 55, 51, 7, 11, 11, 11,[0, 0, 1, 0, 0, 0]],[65, 90, 122, 58, 75, 84, 7, 11, 11, 11,[0, 0, 2, 0, 0, 0]],[55, 69, 85, 32, 35, 28, 14, 14, 1, 10,[0, 0, 1, 0, 0, 0]],[95, 117, 184, 44, 46, 28, 14, 14, 1, 10,[0, 0, 2, 0, 0, 0]],[40, 30, 35, 45, 40, 55, 2, 15, 4, 14,[0, 0, 0, 0, 0, 1]],[85, 70, 80, 97, 80, 123, 2, 15, 4, 14,[0, 0, 0, 0, 0, 2]], null, null, null, null, null, null,[68, 55, 55, 50, 50, 42, 11, 2, 4, 4,[1, 0, 0, 0, 0, 0]],[78, 75, 75, 70, 70, 52, 11, 2, 4, 4,[2, 0, 0, 0, 0, 0]],[78, 107, 75, 100, 100, 70, 11, 7, 4, 4,[0, 3, 0, 0, 0, 0]],[45, 65, 40, 60, 40, 70, 9, 9, 5, 5,[0, 0, 0, 0, 0, 1]],[65, 85, 50, 80, 50, 90, 9, 9, 5, 5,[0, 0, 0, 0, 0, 2]],[95, 115, 90, 80, 90, 60, 9, 16, 5, 5,[0, 3, 0, 0, 0, 0]],[50, 54, 54, 66, 56, 40, 10, 10, 2, 5,[0, 0, 0, 1, 0, 0]],[60, 69, 69, 91, 81, 50, 10, 10, 2, 5,[0, 0, 0, 2, 0, 0]],[80, 74, 74, 126, 116, 60, 10, 17, 2, 5,[0, 0, 0, 3, 0, 0]], null, null, null, null, null,[47, 62, 45, 55, 45, 46, 6, 6, 3, 3,[0, 1, 0, 0, 0, 0]],[57, 82, 95, 55, 75, 36, 6, 12, 3, 3,[0, 0, 2, 0, 0, 0]],[77, 70, 90, 145, 75, 43, 6, 12, 3, 3,[0, 0, 0, 3, 0, 0]], null, null, null,[40, 45, 40, 55, 40, 84, 6, 17, 3, 6,[0, 0, 0, 0, 0, 1]],[60, 55, 60, 95, 70, 124, 6, 17, 3, 6,[0, 0, 0, 0, 0, 2]], null, null,[45, 20, 20, 25, 25, 40, 10, 10, 12, 12,[1, 0, 0, 0, 0, 0]],[50, 53, 62, 43, 52, 45, 3, 10, 2, 2,[0, 0, 1, 0, 0, 0]],[50, 63, 152, 53, 142, 35, 3, 10, 2, 2,[0, 0, 2, 0, 0, 0]],[70, 100, 70, 45, 55, 45, 4, 4, 5, 5,[0, 1, 0, 0, 0, 0]],[100, 125, 100, 55, 85, 35, 4, 4, 5, 5,[0, 2, 0, 0, 0, 0]],[38, 40, 52, 40, 72, 27, 10, 6, 2, 3,[0, 0, 0, 0, 1, 0]],[68, 70, 92, 50, 132, 42, 10, 6, 2, 3,[0, 0, 0, 0, 2, 0]], null, null,[40, 35, 55, 65, 75, 15, 11, 17, 7, 7,[0, 0, 0, 0, 1, 0]],[60, 45, 80, 90, 100, 30, 11, 17, 7, 7,[0, 0, 0, 0, 2, 0]],[48, 44, 40, 71, 40, 77, 3, 9, 1, 14,[0, 0, 0, 0, 0, 1]],[68, 64, 60, 111, 60, 117, 3, 9, 1, 14,[0, 0, 0, 0, 0, 2]],[70, 75, 50, 45, 50, 50, 0, 1, 5, 5,[0, 1, 0, 0, 0, 0]],[120, 125, 80, 55, 60, 60, 0, 1, 5, 5,[0, 2, 0, 0, 0, 0]],[42, 30, 38, 30, 38, 32, 11, 11, 7, 7,[1, 0, 0, 0, 0, 0]],[52, 40, 48, 40, 48, 62, 11, 11, 7, 7,[0, 0, 0, 0, 0, 2]],[72, 120, 98, 50, 98, 72, 11, 11, 7, 7,[0, 3, 0, 0, 0, 0]], null,[90, 60, 80, 90, 110, 60, 0, 13, 5, 5,[0, 0, 0, 0, 2, 0]],[100, 120, 90, 40, 60, 80, 1, 1, 5, 5,[0, 2, 0, 0, 0, 0]],[25, 35, 40, 20, 30, 80, 6, 10, 3, 9,[0, 0, 0, 0, 0, 1]],[75, 125, 140, 60, 90, 40, 6, 10, 3, 9,[0, 0, 2, 0, 0, 0]], null, null,[55, 60, 130, 30, 130, 5, 10, 10, 2, 2,[0, 0, 0, 0, 2, 0]],[95, 95, 95, 95, 95, 59, 0, 0, 15, 15,[2, 0, 0, 0, 0, 0]],[95, 95, 95, 95, 95, 95, 0, 0, 15, 15,[3, 0, 0, 0, 0, 0]], null, null,[60, 78, 135, 91, 85, 36, 9, 15, 1, 14,[0, 0, 2, 0, 0, 0]],[65, 98, 63, 40, 73, 96, 12, 8, 5, 6,[0, 2, 0, 0, 0, 0]],[55, 90, 80, 50, 105, 96, 7, 17, 11, 11,[0, 0, 0, 0, 2, 0]], null,[78, 60, 85, 135, 91, 36, 0, 15, 1, 14,[0, 0, 0, 2, 0, 0]],[70, 131, 100, 86, 90, 40, 7, 11, 10, 10,[0, 2, 0, 0, 0, 0]],[45, 55, 65, 45, 45, 45, 15, 15, 14, 14,[0, 0, 1, 0, 0, 0]],[55, 75, 90, 65, 70, 65, 15, 1, 14, 14,[0, 0, 2, 0, 0, 0]],[75, 110, 125, 100, 105, 85, 15, 1, 14, 14,[0, 0, 3, 0, 0, 0]], null, null, null, null,[43, 29, 31, 29, 31, 37, 13, 13, 15, 15,[1, 0, 0, 0, 0, 0]],[43, 29, 131, 29, 131, 37, 13, 13, 15, 15,[0, 0, 1, 0, 1, 0]],[137, 137, 107, 113, 89, 97, 13, 8, 15, 15,[0, 3, 0, 0, 0, 0]],[137, 113, 89, 137, 107, 97, 13, 7, 15, 15,[0, 0, 0, 3, 0, 0]], null, null, null, null, null, null, null,[97, 107, 101, 127, 89, 79, 13, 13, 15, 15,[0, 1, 0, 2, 0, 0]], null,[90, 125, 80, 90, 90, 125, 1, 7, 15, 15,[0, 2, 0, 0, 0, 1]], null, null, null,[[null, 0, 0, 0, 0, 0]],[88, 112, 75, 102, 80, 143, 12, 12, 15, 15,[0,0,0,0,0,3]],[46,65,65,55,35,34,8,8,15,15,[0,1,0,0,0,0]],[135,143,143,80,65,34,8,8,15,15,[0,3,0,0,0,0]],[50,65,50,40,40,65,11,11,5,7,[0,1,0,0,0,0]],[70,85,70,55,60,80,11,11,5,7,[0,2,0,0,0,0]],[100,125,90,60,70,85,11,11,5,7,[0,3,0,0,0,0]],[50,71,40,40,40,69,9,9,5,8,[0,0,0,0,0,1]],[65,86,60,55,60,94,9,9,5,8,[0,0,0,0,0,2]],[80,116,75,65,75,119,9,9,5,8,[0,0,0,0,0,3]],[50,40,40,70,40,70,10,10,2,5,[0,0,0,0,1,1]],[65,60,55,95,55,90,10,10,2,5,[0,0,0,2,0,0]],[70,85,65,125,65,120,10,10,2,5,[0,0,0,0,0,3]],[70,55,55,35,35,25,0,0,5,5,[1,0,0,0,0,0]],[120,95,95,55,75,20,0,0,5,5,[2,0,0,0,0,0]],[38,47,35,33,35,57,2,2,4,4,[0,0,0,0,0,1]],[68,67,55,43,55,77,2,2,4,4,[0,0,0,0,0,2]],[98,87,105,53,85,67,2,8,4,4,[0,0,3,0,0,0]],[25,20,20,25,45,45,6,6,3,3,[0,0,0,0,1,0]],[50,35,80,50,90,30,6,13,3,3,[0,0,0,0,2,0]],[60,45,110,80,120,90,6,13,3,3,[0,0,0,0,3,0]],[40,28,28,47,52,50,16,16,5,5,[0,0,0,0,1,0]],[70,58,58,87,92,90,16,16,5,5,[0,0,0,0,2,0]],[40,40,60,40,60,10,11,11,7,7,[0,0,0,0,1,0]],[60,50,90,80,120,60,11,11,7,7,[0,0,0,0,2,0]],[42,40,55,40,45,48,0,0,5,5,[0,0,1,0,0,0]],[72,80,100,60,90,88,0,0,5,5,[0,0,2,0,0,0]],[50,64,50,38,38,44,10,10,1,2,[0,1,0,0,0,0]],[90,115,90,48,68,74,10,5,1,2,[0,2,0,0,0,0]],[59,45,50,40,50,26,12,12,5,5,[1,0,0,0,0,0]],[69,90,60,90,60,121,12,12,5,5,[0,0,0,0,0,2]],[30,40,50,40,50,30,5,5,10,10,[0,0,1,0,0,0]],[80,60,90,60,70,50,5,9,10,10,[0,0,2,0,0,0]],[110,80,120,80,90,30,5,9,10,10,[0,0,3,0,0,0]],[40,40,80,40,40,20,11,15,7,14,[0,0,1,0,0,0]],[70,110,80,95,60,70,11,15,7,14,[0,2,0,0,0,0]],[110,85,80,100,80,30,11,15,7,14,[2,0,0,0,0,0]],[52,57,75,35,50,46,4,4,5,14,[0,0,1,0,0,0]],[72,107,125,65,70,71,4,4,5,14,[0,0,2,0,0,0]],[70,85,55,85,95,85,2,10,2,4,[0,0,0,0,2,0]],[41,63,40,40,30,66,10,10,12,12,[0,0,0,0,0,1]],[61,123,60,60,50,136,10,10,12,12,[0,0,0,0,0,2]],[40,38,35,54,35,40,12,3,15,15,[0,0,0,1,0,0]],[75,98,70,114,70,75,12,3,8,8,[0,0,0,2,0,0]],[50,65,45,50,50,45,9,6,3,3,[0,1,0,0,0,0]],[100,115,65,90,90,65,9,6,3,3,[0,2,0,0,0,0]],[50,68,60,50,50,32,1,1,2,8,[0,1,0,0,0,0]],[80,118,90,70,80,42,1,1,2,8,[0,2,0,0,0,0]],[40,45,45,74,54,50,7,7,10,11,[0,0,0,1,0,0]],[60,65,65,134,114,70,7,7,10,11,[0,0,0,2,0,0]],[42,30,45,56,53,39,13,13,6,6,[0,0,0,1,0,0]],[57,40,65,86,73,49,13,13,6,6,[0,0,0,2,0,0]],[57,90,95,136,103,29,13,17,6,6,[0,0,0,3,0,0]],[45,45,30,55,40,50,16,17,6,8,[0,0,0,1,0,0]],[65,60,45,75,55,70,16,17,6,8,[0,0,0,2,0,0]],[95,120,65,95,75,60,16,17,6,8,[0,3,0,0,0,0]],[93,90,101,60,81,95,16,0,5,5,[0,0,3,0,0,0]],[70,110,100,50,60,50,8,8,5,5,[0,2,0,0,0,0]],[60,95,50,145,130,30,7,7,2,9,[0,0,0,2,0,0]],[62,135,95,68,82,65,1,1,4,5,[0,2,0,0,0,0]],[80,85,75,110,100,70,14,13,8,8,[0,0,0,3,0,0]],[58,95,145,50,105,30,4,7,10,11,[0,0,2,0,0,0]],[45,40,40,50,61,34,17,17,6,11,[0,0,0,0,1,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,100,100,70,60,75,1,1,6,10,[0,2,0,0,1,0]],[48,101,95,91,85,15,12,12,2,11,[0,2,0,0,0,0]],[30,25,35,45,30,20,14,6,3,3,[0,0,0,1,0,0]],[70,65,60,125,90,65,14,6,3,3,[0,0,0,2,0,0]],[100,125,135,20,20,70,5,5,10,10,[0,0,2,0,0,0]],[75,80,110,65,90,50,14,14,2,5,[0,0,2,0,0,0]],[60,65,55,105,95,95,13,0,6,6,[0,0,0,2,0,0]],[58,95,58,70,58,97,12,16,5,6,[0,0,0,0,0,2]],[72,80,49,40,49,40,8,8,5,10,[0,1,0,0,0,0]],[122,130,69,80,69,30,8,8,5,10,[0,2,0,0,0,0]],[90,100,90,80,70,75,12,15,15,15,[0,2,0,0,0,0]],[90,100,90,90,80,55,12,14,15,15,[0,2,0,0,0,0]],[90,90,100,70,80,75,10,15,15,15,[0,0,2,0,0,0]],[90,90,100,80,90,55,10,14,15,15,[0,0,2,0,0,0]],[70,95,115,120,50,85,8,15,10,14,[0,0,0,2,0,0]],[28,60,30,40,30,82,15,7,11,14,[0,0,0,0,0,1]],[68,80,50,60,50,102,15,7,11,14,[0,0,0,0,0,2]],[88,120,75,100,75,142,15,7,11,14,[0,0,0,0,0,3]],[92,130,115,80,115,138,17,17,15,15,[0,0,0,0,0,3]],[92,130,115,80,115,138,1,1,15,15,[0,0,0,0,0,3]],[140,85,95,145,95,130,3,15,15,15,[3,0,0,0,0,0]],null,null,[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[35,55,40,50,50,90,12,12,15,15,[0,0,0,0,0,2]],[60,85,50,95,85,110,12,13,5,6,[0,0,0,0,0,3]],null,null,[38,41,40,50,65,65,14,14,5,5,[0,0,0,0,0,1]],[73,67,75,81,100,109,14,17,5,5,[0,0,0,0,0,2]],[10,55,30,35,45,90,4,8,5,5,[0,0,0,0,0,1]],[35,100,60,50,70,110,4,8,5,5,[0,2,0,0,0,0]],[40,35,35,50,40,90,16,16,5,5,[0,0,0,0,0,1]],[50,65,55,40,40,40,8,8,5,5,[0,1,0,0,0,0]],[65,60,60,75,65,115,16,16,5,5,[0,0,0,0,0,2]],null,null,null,[50,85,55,65,65,90,13,13,5,5,[0,0,0,0,0,1]],[65,100,70,80,80,105,13,17,5,5,[0,0,0,0,0,2]],[52,95,55,58,62,55,1,1,4,5,[0,1,0,0,0,0]],null,null,null,null,[65,90,120,85,70,60,3,17,11,11,[0,0,2,0,0,0]],[50,65,65,90,90,100,14,13,8,8,[0,0,0,0,0,2]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[60,55,100,65,100,30,7,7,2,9,[0,0,0,0,1,0]],[38,30,41,30,41,60,16,0,5,5,[0,0,0,0,0,1]],[78,70,61,50,61,100,16,0,5,5,[0,0,0,0,0,2]],null,null,null,null,null,null,null,null,null,null,null,null,null,[70,60,70,87,78,85,11,11,6,7,[0,0,0,2,0,0]],[76,48,48,57,62,34,10,10,2,11,[1,0,0,0,0,0]],[111,83,68,92,82,39,10,4,2,11,[2,0,0,0,0,0]],[50,65,107,105,107,86,12,9,11,11,[0,0,0,1,0,1]],[50,65,107,105,107,86,12,10,11,11,[0,0,0,1,0,1]],[50,65,107,105,107,86,12,14,11,11,[0,0,0,1,0,1]],[50,65,107,105,107,86,12,2,11,11,[0,0,0,1,0,1]],[50,65,107,105,107,86,12,11,11,11,[0,0,0,1,0,1]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[70,92,65,80,55,98,10,10,12,12,[0,0,0,0,0,2]],[70,90,45,15,45,50,14,14,5,5,[0,1,0,0,0,0]],[105,30,105,140,105,55,9,13,5,5,[0,0,0,2,0,0]],[105,140,55,30,55,95,14,14,5,5,[0,2,0,0,0,0]],[105,160,55,30,55,135,14,9,5,5,[0,0,0,2,0,0]],[38,55,85,30,65,30,4,7,10,11,[0,0,1,0,0,0]],null,null,null,null,null,null,[109,81,99,66,84,32,4,8,2,11,[2,0,0,0,0,0]],null,null,null,[125,120,90,170,100,95,15,14,15,15,[0,0,0,3,0,0]],[125,170,100,120,90,95,15,14,15,15,[0,3,0,0,0,0]],[91,72,90,129,90,108,10,1,15,15,[0,0,0,3,0,0]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[74,48,76,83,81,104,13,13,5,5,[0,0,0,0,0,2]],[60,140,50,140,50,60,8,7,10,10,[0,2,0,1,0,0]],[44,66,70,44,55,56,7,11,11,11,[0,0,1,0,0,0]],[54,66,70,44,55,46,7,11,11,11,[0,0,1,0,0,0]],[59,66,70,44,55,41,7,11,11,11,[0,0,1,0,0,0]],[55,85,122,58,75,99,7,11,11,11,[0,0,2,0,0,0]],[75,95,122,58,75,69,7,11,11,11,[0,0,2,0,0,0]],[85,100,122,58,75,54,7,11,11,11,[0,0,2,0,0,0]],null,null,null,null,null,null,null,null,null,null,null,null,[45,140,130,140,135,30,10,10,12,12,[1,0,0,0,0,0]],[95,95,95,95,95,95,1,1,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,2,2,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,3,3,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,4,4,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,5,5,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,6,6,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,7,7,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,8,8,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,9,9,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,10,10,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,11,11,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,12,12,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,13,13,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,14,14,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,15,15,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,16,16,15,15,[3,0,0,0,0,0]],[95,95,95,95,95,95,17,17,15,15,[3,0,0,0,0,0]],null,null,null,null,null,null,null,null,null,null,null,null,null,[55,90,80,50,105,96,7,17,11,11,[0,0,0,0,2,0]],[97,157,127,113,109,77,13,8,15,15,[0,3,0,0,0,0]],[97,113,109,157,127,77,13,7,15,15,[0,0,0,3,0,0]],null,[70,85,55,85,95,85,2,10,2,4,[0,0,0,0,2,0]],[70,85,55,85,95,85,2,10,2,4,[0,0,0,0,2,0]],[75,98,70,114,70,75,12,3,8,8,[0,0,0,2,0,0]],[40,45,45,74,54,50,7,7,10,11,[0,0,0,1,0,0]],[60,65,65,134,114,70,7,7,10,11,[0,0,0,2,0,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[65,60,75,110,121,64,17,17,6,11,[0,0,0,0,2,0]],[75,80,70,65,50,130,14,14,2,5,[0,0,2,0,0,0]],[70,55,65,95,105,85,13,0,6,6,[0,0,0,0,2,0]],[58,95,58,70,58,97,12,16,5,6,[0,0,0,0,0,2]],[92,170,115,80,115,148,17,8,15,15,[0,0,0,0,0,3]],[92,130,145,80,145,128,1,8,15,15,[0,0,0,0,0,3]],[255,115,250,125,250,130,3,15,15,15,[3,0,0,0,0,0]]]";
            basePokemonData = JsonConvert.DeserializeObject<dynamic>(JsonMons);

            var naturesJson = "[[],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[1,1,1,1,1],[0.9,1.1,1,1,1],[0.9,1,1.1,1,1],[0.9,1,1,1.1,1],[0.9,1,1,1,1.1],[1.1,0.9,1,1,1],[1,0.9,1.1,1,1],[1,0.9,1,1.1,1],[1,0.9,1,1,1.1],[1.1,1,0.9,1,1],[1,1.1,0.9,1,1],[1,1,0.9,1.1,1],[1,1,0.9,1,1.1],[1.1,1,1,0.9,1],[1,1.1,1,0.9,1],[1,1,1.1,0.9,1],[1,1,1,0.9,1.1],[1.1,1,1,1,0.9],[1,1.1,1,1,0.9],[1,1,1.1,1,0.9],[1,1,1,1.1,0.9]]";
            natures = JsonConvert.DeserializeObject<List<List<decimal>>>(naturesJson);

            reset();
        }

        public static void reset()
        {
            populateIvs();
        }

        public class SearchResult
        {
            public searchResult foundSomething;
            public List<Tuple<decimal,string,dynamic>> matching;
        }

        public enum searchResult
        {
            one,
            zero,
            multiple
        }

        static List<List<decimal>> natures;
        static readonly List<decimal> neutralNature = new List<decimal>{ 1m, 1m, 1m, 1m, 1m, 1m };
        static readonly List<decimal> maxNature = new List<decimal> { 1.1m, 1.1m, 1.1m, 1.1m, 1.1m, 1.1m };
        static readonly List<decimal> minNature = new List<decimal> { 0.9m, 0.9m, 0.9m, 0.9m, 0.9m, 0.9m };
        public static Dictionary<int, int> NatureIDs { get; private set; } = new Dictionary<int, int>();
        static Dictionary<decimal, int> forms = new Dictionary<decimal, int>();
        static dynamic basePokemonData;

        static int ivLow = 0;
        static int ivHigh = 31;


        static List<List<int>> ivs;

        static void populateIvs()
        {
            ivs = new List<List<int>>();
            for (var i = 0; i < 6; i++)
            {
                ivs.Add(new List<int>());
                for (var j = ivLow; j <= ivHigh; j++)
                {
                    ivs.Last().Add(j);
                }
            }
        }

        static int calculateStat(int pokemonID, int level, int nature, int stat, int stativ, int statev)
        {
            int bstat = getBase(pokemonID)[stat];
            if (stat > 0 && stat < 6)
            {
                var bonus = (double)natures[nature][stat - 1];
                var result = (int)Math.Floor((Math.Floor(((bstat * 2 + (stativ / 1) + Math.Floor((double)(statev / 4))) * level) / 100) + 5) * bonus);
                return result;
            }
            else if (stat == 0)
            {
                var result = (int)Math.Floor(((bstat * 2 + (stativ / 1) + Math.Floor((double)(statev / 4))) * level) / 100) + (level / 1) + 10;

                if (pokemonID == 292) { return 1; } //Shedinja Case
                return result;
            }
            else
            {
                throw new InvalidOperationException("Invalid statID");
            }
            
        }

        static int maxiv;

        static List<int> miniv = new List<int> { -1, 0 };

        static Dictionary<int, int> OneStarNatures = new Dictionary<int, int>()
        {
            { 0, 3 },
            { 1, 10 },
            { 2, 22 },
            { 3, 14 },
            { 4, 18 },
            { 5, 6 },
            { 6, 2 },
            { 7, 23 },
            { 8, 15 },
            { 9, 19 },
            { 10, 9 },
            { 11, 13 },
            { 12, 4 },
            { 13, 17 },
            { 14, 21 },
            { 15, 7 },
            { 16, 11 },
            { 17, 24 },
            { 18, 1 },
            { 19, 20 },
            { 20, 8 },
            { 21, 12 },
            { 22, 25 },
            { 23, 16 },
            { 24, 5 }
        };

        public static string characteristicIDs(int i)
        {
            switch (i)
            {
                case 3:
                    return "Alert to sounds";
                case 2:
                    return "Capable of taking hits";
                case 1:
                    return "Likes to thrash about";
                case 4:
                    return "Mischievous";
                case 5:
                    return "Somewhat vain";
                case 0:
                    return "Takes plenty of siestas";
                default:
                    return null;
            }
        }

        public static Tuple<int,int> characteristic(int c)
        {
            switch (c)
            {
                case 3:
                    return new Tuple<int, int>(5, 1);//"5.1";
                case 2:
                    return new Tuple<int, int>(2, 1);//"2.1";
                case 1:
                    return new Tuple<int, int>(1, 1);//"1.1";
                case 4:
                    return new Tuple<int, int>(3, 1);//"3.1";
                case 5:
                    return new Tuple<int, int>(4, 1);//"4.1";
                case 0:
                    return new Tuple<int, int>(0, 1);//"0.1";
                default:
                    return new Tuple<int, int>(1, 1);
            }
        }

        static List<int> calculateStatIV(int pokeID, int level, int nature, int stat, int statVal, int statEV, Tuple<int,int> chara)
        {
            var charas = new List<List<int>>{
                new List<int>{0, 5, 10, 15, 20, 25, 30 },
                new List<int>{1, 6, 11, 16, 21, 26, 31 },
                new List<int>{2, 7, 12, 17, 22, 27 },
                new List<int>{3, 8, 13, 18, 23, 28 },
                new List<int>{4, 9, 14, 19, 24, 29 }
                };
            ivs[stat] = new List<int>();
            var i = 31;
            do
            {
                int fval = calculateStat(pokeID, level, nature, stat, i, statEV);
                if (fval == statVal) {
                    ivs[stat].Insert(0,i);
                }
            } while (i--!=0);

            if (stat == 0 && pokeID == 292) {
                ivs[stat] = new List<int>();
                for (var j = 0; j <= 31; j++)
                {
                    ivs[stat].Add(j);
                }
            }

            if (chara.Item1 == stat && chara != null)
            {
                ivs[stat] = ivs[stat].Intersect(charas[chara.Item2]).ToList();
                maxiv = ivs[stat][ivs[stat].Count - 1]; //global maximum IV
            }

            try
            {
                if (ivs[stat][0] > miniv[1]) { miniv[1] = ivs[stat][0]; }
                List<int> sval = ivs[stat];
                if (sval.Count() == 0)
                    throw new Exception("BAD STAT!");
                return sval;
            }
            catch
            {
                
                throw new StatException("Please check that " + statNames[stat] + " is correct!", stat,0,0);
            }

        }

        static string[] statNames = new string[] { "HP", "ATK", "DEF", "SP.ATK.", "SP.DEF.", "SPD." };

        public class StatException : Exception
        {
            public int Stat;
            public int min;
            public int max;
            public StatException(string msg, int IV, int min, int max) : base(msg)
            {
                this.Stat = IV;
                this.min = min;
                this.max = max;
            }
        }

        public static List<List<int>> getIVs(decimal formID, int level, int oneStarNature, int character, List<int> stats, List<int> statEVs)
        {

            int nature = OneStarNatures[oneStarNature];
            Tuple<int,int> chrSmall = characteristic(character);
            int pokeID = Math.Floor(formID) != formID ? forms[formID] : (int)formID;

            if (statEVs == null || statEVs.Count == 0)
            {
                statEVs = new List<int>();
                for (var i = 0; i < 6; i++)
                {
                    statEVs.Add(0);
                }
            }

            //pstat == the statID
            //stat == the actual stat, I guess?
            List<int> validate_iv(List<int> result, int pokemonID, int pstat, int stat, int statev, int pokelvl, int pnature)
            { // IV error handling
                var max = calculateStat(pokemonID, pokelvl, pnature, pstat, 31, statev);
                var min = calculateStat(pokemonID, pokelvl, pnature, pstat, 0, statev);

                if (stat > max || stat < min)
                {
                    throw new StatException(statNames[pstat] + " should be between " + min + " and " + max,pstat,min,max);
                }
                var i = 0;
                var l = result.Count;
                do
                {
                    if (result[i] > maxiv)
                    { //beyond characteristic upper bound
                        result = result.GetRange(0, i);
                    }
                    if (miniv[0] == pstat && result[i] >= miniv[1])
                    { //best iv must remain be at least equal to the lower bound
                        result = result.GetRange(i,result.Count - i);
                    }
                    i++;
                } while (i < l);

                if (result.Count == 0 || result[0] > maxiv || result[0] == -1 || result[result.Count - 1] > 31)
                { //out of any bounds
                    throw new StatException("Characteristic or Nature may be incorrect...",pstat,min,max);
                }
                return result;
            }
            maxiv = 31;
            miniv = new List<int> { -1, 0 };//global- maximum IV
            reset();
            //var r = rs[i];
            var j = 5;
            do
            {
                try
                {
                    ivs[j] = ivs[j].Intersect(calculateStatIV(pokeID, level, nature, j, stats[j], statEVs[j], chrSmall)).ToList();//, calc_stativ($('number-' + r).value, j,$('stat' + j + '-' + r).value,$('ep' + j + '-' + r).value,$('level-' + r).value,$('nat-' + r).value,$('char-' + r).value,$('pot1-' + r).value,$('pot2-' + r).value));
                }
                catch (Exception e)
                {
                    throw e;
                }
            } while (j--!=0);
            miniv[0] = chrSmall.Item1;

            var c = 0;
            var k = 5;
            do
            {
                ivs[k] = validate_iv(ivs[k],pokeID, k,stats[k],statEVs[k],level,nature);
                if (ivs[k].Count == 1) { c++; }
            } while (k--!=0);

            return ivs;

        }

        public static int getPokemonIndex(decimal pokemonID)
        {
            decimal ID = pokemonID;
            int idx = 0;
            if (ID != decimal.Floor(ID))
                idx = forms[ID];
            else
                idx = (int)ID;
            return idx - 1;
        }

        static dynamic getBase(int forNum)
        {
            var b = basePokemonData[forNum];
            return b;
        }
    }
}
